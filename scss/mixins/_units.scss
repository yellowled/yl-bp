// UNITS MIXINS
// --------------------------------------------------------------------
// rem with a px fallback. Also converts px values to rem.
// github.com/drublic/Sass-Mixins/blob/master/partials/_rem.scss
@mixin x-rem ($property, $values, $main-font-size: 16px) {
    // Empty list for all values in px
    $px-values: ();
    $rem-values: ();
    // Iterate over entries
    @each $value in $values {
        // If the value is zero or of a type that doesnâ€™t need conversion, return the value untouched
        @if ($value == 0) or type-of($value) == string or type-of($value) == color or type-of($value) == bool {
            $px-values: append($px-values, $value);
            $rem-values: append($rem-values, $value);
        // Otherwise convert it properly
        } @else {
            $unit: unit($value);

            @if $unit == 'px' {
                $px-values: append($px-values, #{strip-unit($value)}px);
                $rem-values: append($rem-values, (strip-unit($value) / strip-unit($main-font-size) * 1rem));
            } @else {
                $px-values: append($px-values, ($value * $main-font-size));
                $rem-values: append($rem-values, #{$value}rem);
            }
        }
    }
    // Return the property and its list of converted values
    #{$property}: #{$px-values};
    #{$property}: #{$rem-values};
}

// github.com/drublic/Sass-Mixins/blob/master/partials/_calc.scss
@mixin x-calc ($property, $values) {
    #{$property}: -webkit-calc(#{$values});
    #{$property}: calc(#{$values});
}
