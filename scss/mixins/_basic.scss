// BASIC MIXINS
// --------------------------------------------------------------------
// inline-block with IE7 legacy support
@mixin inblock-level {
    display: inline-block;

    @if $ie7-support {
        *display: inline;
        *zoom: 1;
    }
}

// Horizontal centering
@mixin center-horizontal($center-width) {
    margin-left: auto;
    margin-right: auto;
    width: $center-width;
}

// Vertical centering
@mixin center-vertical($center-height) {
    display: table-cell;
    min-height: $center-height;
    vertical-align: middle;
}


// CSS3 MIXINS
// --------------------------------------------------------------------
// Box model
// → github.com/drublic/Sass-Mixins/blob/master/partials/_box-sizing.scss
@mixin x-box-sizing($property: border-box) {
    -webkit-box-sizing: $property;
    -moz-box-sizing: $property;
    box-sizing: $property;
}

// Hyphens
// → developer.mozilla.org/en-US/docs/Web/CSS/hyphens
@mixin x-hyphens($property) {
    -webkit-hyphens: $property;
    -moz-hyphens: $property;
    -ms-hyphens: $property;
    hyphens: $property;
}

// Linear gradients
// → github.com/drublic/Sass-Mixins/blob/master/partials/_linear-gradient.scss
@mixin x-linear-gradient ($from: #ccc, $to: #aaa, $direction: "to bottom", $fallback: $from) {
    $directions: helper-gradient-angle($direction);
    // Provide a fallback-color
    background-color: $fallback;
    // Cross-browser linear-gradients
    background-image: -webkit-gradient(linear, unquote(nth($directions, 2)), from($from), to($to)); // Android 2.1-3.0
    background-image: -webkit-linear-gradient(unquote(nth($directions, 1)), $from, $to);
    background-image: linear-gradient(unquote($direction), $from, $to);
}

// rem unit
// → github.com/drublic/Sass-Mixins/blob/master/partials/_rem.scss
@mixin x-rem($property, $values, $main-font-size: 16px) {
    // Empty list for all values in px
    $px-values: ();
    $rem-values: ();
    // Iterate over entries
    @each $value in $values {
        // If the value is zero, return 0
        @if $value == 0 or $value == auto {
            $px-values: append($px-values, $value);
            $rem-values: append($rem-values, $value);
        // If the value is not zero, convert it from px to rem
        } @else {
            $px-values: append($px-values, ($value * $main-font-size) );
            $rem-values: append($rem-values, #{$value}rem);
        }
    }
    // Return the property and its list of converted values
    #{$property}: #{$px-values};
    #{$property}: #{$rem-values};
}

// Transforms
// → github.com/drublic/Sass-Mixins/blob/master/partials/_transform.scss
@mixin x-transform ($values) {
    -webkit-transform: $values; // Chrome, Safari, iOS Safari, Android Stock
    -ms-transform: $values; // IE9
    transform: $values;
}

// Transitions
// → github.com/drublic/Sass-Mixins/blob/master/partials/_transition.scss
@mixin x-transition ($values) {
    -webkit-transition: $values;
    transition: $values;
}
