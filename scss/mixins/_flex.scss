// FLEXBOX SUPPORT
// --------------------------------------------------------------------
// css-tricks.com/snippets/css/a-guide-to-flexbox/

// CONTAINER
@mixin x-display-flex {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin x-inline-flex {
    display: -webkit-inline-box;
    display: -moz-inline-flex;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
}

@mixin x-flex-direction($value: row) {
    @if $value == row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
    } @else if $value == column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
    } @else if $value == column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
    } @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
    }
    -moz-flex-direction: $value;
    -webkit-flex-direction: $value;
    -ms-flex-direction: $value;
    flex-direction: $value;
}

@mixin x-flex-wrap($value) {
    @if $value == nowrap {
        -ms-flex-wrap: none;
    } @else {
        -ms-flex-wrap: $value;
    }
    -webkit-flex-wrap: $value;
    flex-wrap: $value;
}

@mixin x-flex-flow($values) {
    -webkit-flex-flow: $values;
    -moz-flex-flow: $values;
    -ms-flex-flow: $values;
    flex-flow: $values;
}

@mixin x-justify-content($value: flex-start) {
    @if $value == flex-start {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
    } @else if $value == flex-end {
        -webkit-box-pack: end;
        -ms-flex-pack: end;
    } @else if $value == space-between {
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
    } @else if $value == space-around {
        -ms-flex-pack: distribute;
    } @else {
        -webkit-box-pack: $value;
        -ms-flex-pack: $value;
    }
    -moz-justify-content: $value;
    -webkit-justify-content: $value;
    justify-content: $value;
}

@mixin x-align-items($value: stretch) {
    @if $value == flex-start {
        -webkit-box-align: start;
        -ms-flex-align: start;
    } @else if $value == flex-end {
        -webkit-box-align: end;
        -ms-flex-align: end;
    } @else {
        -webkit-box-align: $value;
        -ms-flex-align: $value;
    }
    -moz-align-items: $value;
    -webkit-align-items: $value;
    align-items: $value;
}

@mixin x-align-content ($value) {
    @if $value == flex-start {
        -ms-flex-line-pack: start;
    } @else if $value == flex-end {
        -ms-flex-line-pack: end;
    } @else if $value == space-between {
        -ms-flex-line-pack: justify;
    } @else if $value == space-around {
        -ms-flex-line-pack: distribute;
    } @else {
        -ms-flex-line-pack: $value;
    }
    -moz-align-content: $value;
    -webkit-align-content: $value;
    align-content: $value;
 }

// ITEM
@mixin x-order($value) {
    -webkit-box-ordinal-group: $value;
    -moz-box-ordinal-group: $value;
    -ms-flex-order: $value;
    -webkit-order: $value;
    order: $value;
}

@mixin x-flex-grow($value: 0) {
    -webkit-box-flex: $value;
    -moz-flex-grow: $value;
    -webkit-flex-grow: $value;
    -ms-flex-positive: $value;
    flex-grow: $value;
}

@mixin x-flex-shrink($value: 1) {
    -moz-flex-shrink: $int;
    -webkit-flex-shrink: $int;
    -ms-flex-negative: $int;
    flex-shrink: $int;
}

@mixin x-flex-basis($value: auto) {
    -moz-flex-basis: $value;
    -webkit-flex-basis: $value;
    -ms-flex-preferred-size: $value;
    flex-basis: $value;
}

@mixin x-flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

@mixin x-align-self($value: auto) {
    -moz-align-self: $value;
    -webkit-align-self: $value;
    @if $value == flex-start {
        -ms-flex-item-align: start;
    } @else if $value == flex-end {
        -ms-flex-item-align: end;
    } @else {
        -ms-flex-item-align: $value;
    }
    align-self: $value;
}
